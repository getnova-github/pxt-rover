{"entries":[{"timestamp":1729630106385,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"0\" y=\"0\""],[0,"></b"]],"start1":67,"start2":67,"length1":20,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"205\" y=\"0\""],[0,"></b"]],"start1":107,"start2":107,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.forever(function () {\n\t\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":33,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"blocksprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":228,"start2":228,"length1":36,"length2":31}]}]},{"timestamp":1729630120472,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"function go_forward (delay: number) {\n\t\n}\n"],[0,"basi"]],"start1":0,"start2":0,"length1":46,"length2":4}]}]},{"timestamp":1729630895004,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"ck><"],[-1,"block type=\"function_definition\" x=\"532\" y=\"247\"><mutation name=\"go forward\" functionid=\"%G.amSt0[Y$RQ)JelA?]\"><arg name=\"delay\" id=\"cdt?KiW{.]0F}GW-W#2~\" type=\"number\"></arg></mutation><field name=\"function_name\">go forward</field><value name=\"cdt?KiW{.]0F}GW-W#2~\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">delay</field></block></value></block><"],[0,"/xml"]],"start1":173,"start2":173,"length1":416,"length2":8}]}]},{"timestamp":1729630895104,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"es><"],[-1,"variable id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</variable><variable id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</variable><"],[0,"/var"]],"start1":63,"start2":63,"length1":121,"length2":8},{"diffs":[[0," x=\""],[-1,"2"],[0,"0\" y=\""],[-1,"2"],[0,"0\"><"],[-1,"statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field><comment pinned=\"false\" h=\"80\" w=\"160\">Define the motor pins</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"analog_pin\"><field name=\"pin\">AnalogPin.P13</field></block></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"analog_pin\"><field name=\"pin\">AnalogPin.P14</field></block></value></block></next></block></statement></block><block type=\"function_definition\" x=\"492\" y=\"20\"><mutation name=\"moveBackward\" functionid=\"*J:7V^U_.-r4^E9q0o5*\"><arg name=\"speed\" id=\"5mwq7eyfka84zs96gi08xx\" type=\"number\"></arg></mutation><field name=\"function_name\">moveBackward</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to move the Rover backward</comment><value name=\"5mwq7eyfka84zs96gi08xx\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">speed</field></block></value><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left motor backward\nSet speed to maximum backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right motor forward\nSet speed to maximum forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></statement></block><block type=\"function_definition\" x=\"954\" y=\"20\"><mutation name=\"moveForward\" functionid=\"_]uP|}0PrSB*jtI;c:DB\"><arg name=\"speed\" id=\"cqbcr6fv70uokdc2bwf\" type=\"number\"></arg></mutation><field name=\"function_name\">moveForward</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to move the Rover forward</comment><value name=\"cqbcr6fv70uokdc2bwf\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">speed</field></block></value><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left motor forward (e.g. positive speed)\nSet speed to maximum forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right motor backward (e.g. negative speed)\nSet speed to maximum backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value></block></next></block></statement></block><block type=\"function_definition\" x=\"20\" y=\"271\"><mutation name=\"turnLeft\" functionid=\"IJkw_;{=3^xg};27sZ?T\"><arg name=\"speed\" id=\"yc8dapmvm4odud8fjqkvg\" type=\"number"],[1,"/block><block type=\"device_forever\" x=\"205\" y=\"0\"></block><block type=\"function_definition\" x=\"532\" y=\"247\"><mutation name=\"go forward\" functionid=\"%G.amSt0[Y$RQ)JelA?]"],[0,"\"><"],[-1,"/"],[0,"arg"],[-1,"></mutation><field name=\"function_name\">turnLeft</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to turn the Rover left (both motors same direction)</comment><value name=\"yc8dapmvm4odud8fjqkvg\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">speed</field></block></value><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Both motors backward to turn left\nLeft motor backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right motor backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value></block></next></block></statement></block><block type=\"function_definition\" x=\"471\" y=\"271\"><mutation name=\"turnRight\" functionid=\"=ySI$X.dGYQ%k4j`]Fzx\"><arg name=\"speed\" id=\"a464j7ouwc99k3eik17\" type=\"number\"></arg></mutation><field name=\"function_name\">turnRight</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to turn the Rover right (both motors same direction)</comment><value name=\"a464j7ouwc99k3eik17\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">speed</field></block></value><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Both motors forward to turn right\nLeft motor forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right motor forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></statement></block><block type=\"function_definition\" x=\"933\" y=\"271\"><mutation name=\"stopRover\" functionid=\"E:Ik7hXRw[1dOAuhA~Bo\"></mutation><field name=\"function_name\">stopRover</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to stop the Rover</comment><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Stop left motor</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">90</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Stop right motor</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">90</field></shadow></value></block></next></block></statement"],[1," name=\"delay\" id=\"cdt?KiW{.]0F}GW-W#2~\" type=\"number\"></arg></mutation><field name=\"function_name\">go forward</field><value name=\"cdt?KiW{.]0F}GW-W#2~\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">delay</field></block></value"],[0,"></b"]],"start1":104,"start2":104,"length1":8100,"length2":475}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"// Function to move the Rover forward\nfunction moveForward (speed: number) {\n    // Left motor forward (e.g. positive speed)\n    // Set speed to maximum forward\n    pins.servoWritePin(leftMotor, 180)\n    // Right motor backward (e.g. negative speed)\n    // Set speed to maximum backward\n    pins.servoWritePin(rightMotor, 0)\n}\n// Function to turn the Rover left (both motors same direction)\nfunction turnLeft (speed: number) {\n    // Both motors backward to turn left\n    // Left motor backward\n    pins.servoWritePin(leftMotor, 0)\n    // Right motor backward\n    pins.servoWritePin(rightMotor, 0)\n}\n// Function to stop the Rover\nfunction stopRover () {\n    // Stop left motor\n    pins.servoWritePin(leftMotor, 90)\n    // Stop right motor\n    pins.servoWritePin(rightMotor, 90)\n}\n// Function to turn the Rover right (both motors same direction)\nfunction turnRight (speed: number) {\n    // Both motors forward to turn right\n    // Left motor forward\n    pins.servoWritePin(leftMotor, 180)\n    // Right motor forward\n    pins.servoWritePin(rightMotor, 180)\n}\n// Function to move the Rover backward\nfunction moveBackward (speed: number) {\n    // Left motor backward\n    // Set speed to maximum backward\n    pins.servoWritePin(leftMotor, 0)\n    // Right motor forward\n    // Set speed to maximum forward\n    pins.servoWritePin(rightMotor, 180)\n}\nlet rightMotor = 0\nlet leftMotor = 0\n// Define the motor pins\nleftMotor = AnalogPin.P13\nrightMotor = AnalogPin.P14"],[1,"function go_forward (delay: number) {\n\t\n}\nbasic.forever(function () {\n\t\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":1457,"length2":75}]}]},{"timestamp":1729631225875,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"pe=\""],[-1,"function_definition\" x=\"529\" y=\"-48"],[1,"pxt-on-start\" x=\"20\" y=\"20\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field><comment pinned=\"false\" h=\"80\" w=\"160\">Define the motor pins</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"analog_pin\"><field name=\"pin\">AnalogPin.P13</field></block></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"analog_pin\"><field name=\"pin\">AnalogPin.P14</field></block></value></block></next></block></statement></block><block type=\"function_definition\" x=\"492\" y=\"20"],[0,"\"><m"]],"start1":200,"start2":200,"length1":43,"length2":733},{"diffs":[[0,"ock "],[-1,"type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field><comment pinned=\"false\" h=\"80\" w=\"160\">Define the motor pins</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"analog_pin\"><field name=\"pin\">AnalogPin.P13</field></block></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"analog_pin\"><field name=\"pin\">AnalogPin.P14</field></block></value></block></next></block></statement></block><block "],[0,"type"]],"start1":2433,"start2":2433,"length1":697,"length2":8},{"diffs":[[0,"x=\"9"],[-1,"87"],[1,"54"],[0,"\" y=\""],[-1,"-49"],[1,"20"],[0,"\"><m"]],"start1":2464,"start2":2464,"length1":18,"length2":17},{"diffs":[[0," x=\""],[-1,"53"],[1,"20"],[0,"\" y=\""],[-1,"199"],[1,"271"],[0,"\"><m"]],"start1":4046,"start2":4046,"length1":18,"length2":18},{"diffs":[[0," x=\""],[-1,"504"],[1,"471"],[0,"\" y=\""],[-1,"194"],[1,"271"],[0,"\"><m"]],"start1":5583,"start2":5583,"length1":19,"length2":19},{"diffs":[[0,"x=\"9"],[-1,"1"],[1,"3"],[0,"3\" y=\"2"],[-1,"5"],[1,"7"],[0,"1\"><"]],"start1":7123,"start2":7123,"length1":17,"length2":17}]}]},{"timestamp":1729636927162,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":243,"start2":243,"length1":17,"length2":21}]}]},{"timestamp":1729636927719,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"on\" "],[-1,"id=\"%JypbIXD__NHUijORJu+\" x=\"0"],[1,"x=\"529"],[0,"\" y=\""],[-1,"0"],[1,"-48"],[0,"\"><m"]],"start1":221,"start2":221,"length1":44,"length2":22},{"diffs":[[0,"x\"><"],[-1,"shadow type=\"argument_reporter_number\" id=\"L|:V.vIUgLj2sxt@%jYk\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">speed"],[1,"block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">speed</field></block></value><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left motor backward\nSet speed to maximum backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right motor forward\nSet speed to maximum forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></statement></block><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field><comment pinned=\"false\" h=\"80\" w=\"160\">Define the motor pins</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"analog_pin\"><field name=\"pin\">AnalogPin.P13</field></block></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"analog_pin\"><field name=\"pin\">AnalogPin.P14</field></block></value></block></next></block></statement></block><block type=\"function_definition\" x=\"987\" y=\"-49\"><mutation name=\"moveForward\" functionid=\"_]uP|}0PrSB*jtI;c:DB\"><arg name=\"speed\" id=\"cqbcr6fv70uokdc2bwf\" type=\"number\"></arg></mutation><field name=\"function_name\">moveForward</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to move the Rover forward</comment><value name=\"cqbcr6fv70uokdc2bwf\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">speed</field></block></value><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left motor forward (e.g. positive speed)\nSet speed to maximum forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right motor backward (e.g. negative speed)\nSet speed to maximum backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value></block></next></block></statement></block><block type=\"function_definition\" x=\"53\" y=\"199\"><mutation name=\"turnLeft\" functionid=\"IJkw_;{=3^xg};27sZ?T\"><arg name=\"speed\" id=\"yc8dapmvm4odud8fjqkvg\" type=\"number\"></arg></mutation><field name=\"function_name\">turnLeft</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to turn the Rover left (both motors same direction)</comment><value name=\"yc8dapmvm4odud8fjqkvg\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">speed</field></block></value><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Both motors backward to turn left\nLeft motor backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0"],[0,"</fi"]],"start1":548,"start2":548,"length1":142,"length2":4218},{"diffs":[[0,"pe=\""],[1,"v"],[0,"ar"],[-1,"gument_reporter_number\" id=\"M91p8.;}`u%`mr-r9Bo4\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">speed</field></block></value"],[1,"iables_get\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right motor backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value></block></next></block></statement></block><block type=\"function_definition\" x=\"504\" y=\"194\"><mutation name=\"turnRight\" functionid=\"=ySI$X.dGYQ%k4j`]Fzx\"><arg name=\"speed\" id=\"a464j7ouwc99k3eik17\" type=\"number\"></arg></mutation><field name=\"function_name\">turnRight</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to turn the Rover right (both motors same direction)</comment><value name=\"a464j7ouwc99k3eik17\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">speed</field></block></value><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Both motors forward to turn right\nLeft motor forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right motor forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></statement></block><block type=\"function_definition\" x=\"913\" y=\"251\"><mutation name=\"stopRover\" functionid=\"E:Ik7hXRw[1dOAuhA~Bo\"></mutation><field name=\"function_name\">stopRover</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to stop the Rover</comment><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Stop left motor</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">90</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Stop right motor</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">90</field></shadow></value></block></next></block></statement"],[0,"></b"]],"start1":4788,"start2":4788,"length1":152,"length2":3529}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"namespace RoverControl {\n\n    /**\n     * M"],[1,"// Function to m"],[0,"ove the "],[-1,"r"],[1,"R"],[0,"over"]],"start1":0,"start2":0,"length1":55,"length2":29},{"diffs":[[0,"ward"],[-1," for a specified time\n     * @param speed percentage of speed (0-100), eg: 50\n     * @param ms duration in milliseconds, eg: 1000\n     */\n    //% block=\"move forward at $speed\\\\% speed for $ms ms\"\n    //% speed.min=0 speed.max=100\n    //% ms.shadow=timePicker\n    export function moveForwardFor(speed: number, ms: number): void {\n        ContinuousServo.spin_one_way_with_speed(AnalogPin.P13, speed);\n        ContinuousServo.spin_other_way_with_speed(AnalogPin.P14, speed);\n        basic.pause(ms);   // Wait for the specified duration\n        stopRover();       // Stop the motors\n    }\n\n    /**\n     * Move the rover backward for a specified time\n     * @param speed percentage of speed (0-100), eg: 50\n     * @param ms duration in milliseconds, eg: 1000\n     */\n    //% block=\"move backward a"],[1,"\nfunction moveForward (speed: number) {\n    // Left motor forward (e.g. positive speed)\n    // Set speed to maximum forward\n    pins.servoWritePin(leftMotor, 180)\n    // Right motor backward (e.g. negative speed)\n    // Se"],[0,"t "],[-1,"$"],[0,"speed"],[-1,"\\\\% speed for $ms ms\"\n    //% speed.min=0 speed.max=100\n    //% ms.shadow=timePicker\n    export function moveBackwardFor(speed: number, ms: number): void {\n        ContinuousServo.spin_other_way_with_speed(AnalogPin.P13, speed);\n        ContinuousServo.spin_one_way_with_speed(AnalogPin.P14, speed);\n        basic.pause(ms);   // Wait for the specified duration\n        stopRover();       // Stop the motors\n    }\n\n    /**\n     * T"],[1," to maximum backward\n    pins.servoWritePin(rightMotor, 0)\n}\n// Function to t"],[0,"urn the "],[-1,"r"],[1,"R"],[0,"over "],[-1,"right for a specified time\n     * @param speed percentage of speed (0-100), eg: 50\n     * @param ms duration in milliseconds, eg: 1000\n     */\n    //% block=\"turn right at $speed\\\\% speed for $ms ms\"\n    //% speed.min=0 speed.max=100\n    //% ms.shadow=timePicker\n    export "],[1,"left (both motors same direction)\n"],[0,"func"]],"start1":33,"start2":33,"length1":1530,"length2":362},{"diffs":[[0,"turn"],[-1,"RightFor"],[1,"Left "],[0,"(spe"]],"start1":400,"start2":400,"length1":16,"length2":13},{"diffs":[[0,"mber"],[-1,", ms: number): void {\n        ContinuousServo.spin_one_way_with_speed(AnalogPin.P13, speed);\n        ContinuousServo.spin_one_way_with_speed(AnalogPin.P14, speed);\n        basic.pause(ms);   // Wait for the specified duration\n        stopRover();       // Stop the motors\n    }\n\n    /**\n     * Turn the rover left for a specified time\n     * @param speed percentage of speed (0-100), eg: 50\n     * @param ms duration in milliseconds, eg: 1000\n     */\n    //% block=\"turn left at $speed\\\\% speed for $ms ms\"\n    //% speed.min=0 speed.max=100\n    //% ms.shadow=timePicker\n    export function turnLeftFor(speed: number, ms: number): void {\n        ContinuousServo.spin_other_way_with_speed(AnalogPin.P13, speed);\n        ContinuousServo.spin_other_way_with_speed(AnalogPin.P14, speed);\n        basic.pause(ms);   // Wait for the specified duration\n        stopRover();       // Stop the motors\n    }\n\n    /**\n     * Move the rover forward\n     * @param speed percentage of speed (0-100), eg: 50\n     */\n    //% block=\"move forward at $speed\\\\% speed\"\n    //% speed.min=0 speed.max=100\n    export function moveForward(speed: number): void {\n        // Left motor forward, right motor backward\n        ContinuousServo.spin_one_way_with_speed(AnalogPin.P13, speed);\n        ContinuousServo.spin_other_way_with_speed(AnalogPin.P14, speed);\n    }\n\n    /**\n     * Move the rover backward\n     * @param speed percentage of speed (0-100), eg: 50\n     */\n    //% block=\"move backward at $speed\\\\% speed\"\n    //% speed.min=0 speed.max=100\n    export function moveBackward(speed: number): void {\n  "],[1,") {\n    // Both motors backward to turn left\n    // Left motor backward\n    pins.servoWritePin(leftMotor, 0)\n    // Right motor backward\n    pins.servoWritePin(rightMotor, 0)\n}\n// Function to stop the Rover\nfunction stopRover () {\n    // Stop left motor\n    pins.servoWritePin(leftMotor, 90)\n"],[0,"    "],[-1,"  "],[0,"// "],[-1,"Left motor backward, right motor forward\n        ContinuousServo.spin_other_way_with_speed(AnalogPin.P13, speed);\n        ContinuousServo.spin_one_way_with_speed(AnalogPin.P14, speed);\n    }\n\n    /**\n     * T"],[1,"Stop right motor\n    pins.servoWritePin(rightMotor, 90)\n}\n// Function to t"],[0,"urn the "],[-1,"r"],[1,"R"],[0,"over"]],"start1":419,"start2":419,"length1":1818,"length2":390},{"diffs":[[0,"ight"],[-1,"\n     * @param speed percentage of speed (0-100), eg: 50\n     */\n    //% block=\"turn right at $speed\\\\% speed\"\n    //% speed.min=0 speed.max=100\n    export "],[1," (both motors same direction)\n"],[0,"func"]],"start1":811,"start2":811,"length1":164,"length2":38},{"diffs":[[0,"urnRight"],[1," "],[0,"(speed: "]],"start1":855,"start2":855,"length1":16,"length2":17},{"diffs":[[0,"eed: number)"],[-1,": void {\n    "],[1," {\n"],[0,"    // Both "]],"start1":867,"start2":867,"length1":37,"length2":27},{"diffs":[[0,"ors "],[-1,"spin in the same direction to turn right\n        ContinuousServo.spin_one_way_with_speed(AnalogPin.P13, speed);\n        ContinuousServo.spin_one_way_with_speed(AnalogPin.P14, speed);\n    }\n\n    /**\n     * Turn the rover left\n     * @param speed percentage of speed (0-100), eg: 50\n     */\n    //% block=\"turn left at $speed\\\\% speed\"\n    //% speed.min=0 speed.max=100\n    export function turnLeft"],[1,"forward to turn right\n    // Left motor forward\n    pins.servoWritePin(leftMotor, 180)\n    // Right motor forward\n    pins.servoWritePin(rightMotor, 180)\n}\n// Function to move the Rover backward\nfunction moveBackward "],[0,"(spe"]],"start1":897,"start2":897,"length1":404,"length2":225},{"diffs":[[0,"ber)"],[-1,": void {\n   "],[1," {\n"],[0,"    "],[-1," "],[0,"// "],[-1,"Both"],[1,"Left"],[0," motor"],[-1,"s spin in the same direction to turn left\n        ContinuousServo.spin_other_way_with_speed(AnalogPin.P13, speed);\n        ContinuousServo.spin_other_way_with_speed(AnalogPin.P14, speed);\n    }\n\n    /**\n     * Stop the rover\n     */\n    //% block=\"stop\"\n    export function stopRover(): void {\n "],[1," backward\n    // Set speed to maximum backward\n    pins.servoWritePin(leftMotor, 0)\n    // Right motor forward\n"],[0,"    "],[-1,"   "],[0,"// S"],[-1,"top both motors by setting speed to 0\n        ContinuousServo.spin_one_way_with_speed(AnalogPin.P13, 0);\n        ContinuousServo.spin_one_way_with_speed(AnalogPin.P14, 0);\n    }\n\n    /**\n     * Get distance from the sonar sensor in the specified units\n     * @param unit the unit of measurement (Centimeters, Inches, Microseconds), eg: PingUnit.Centimeters\n     * @returns distance measured in the specified unit\n     */\n    //% blockId=\"rover_read_distance\" block=\"read distance in %unit\"\n    //% unit.defl=PingUnit.Centimeters\n    //% blockNamespace=RoverControl\n    //% group=\"Sensors\"\n    //% weight=100\n    export function readDistance(unit: PingUnit): number {\n        return sonar.ping(DigitalPin.P0, DigitalPin.P1, unit);\n    }\n}"],[1,"et speed to maximum forward\n    pins.servoWritePin(rightMotor, 180)\n}\nlet rightMotor = 0\nlet leftMotor = 0\n// Define the motor pins\nleftMotor = AnalogPin.P13\nrightMotor = AnalogPin.P14"],[0,"\n"]],"start1":1129,"start2":1129,"length1":1078,"length2":328}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"ContinuousServo\": \"github:tinkertanker/pxt-continuous-servo#v0.0.6\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\""],[0,"\n   "]],"start1":131,"start2":131,"length1":144,"length2":8},{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":223,"start2":223,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1729630106384,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"test\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1729636927162,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</variable><variable id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</variable></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field><comment pinned=\"false\" h=\"80\" w=\"160\">Define the motor pins</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"analog_pin\"><field name=\"pin\">AnalogPin.P13</field></block></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"analog_pin\"><field name=\"pin\">AnalogPin.P14</field></block></value></block></next></block></statement></block><block type=\"function_definition\" x=\"492\" y=\"20\"><mutation name=\"moveBackward\" functionid=\"*J:7V^U_.-r4^E9q0o5*\"><arg name=\"speed\" id=\"5mwq7eyfka84zs96gi08xx\" type=\"number\"></arg></mutation><field name=\"function_name\">moveBackward</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to move the Rover backward</comment><value name=\"5mwq7eyfka84zs96gi08xx\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">speed</field></block></value><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left motor backward\nSet speed to maximum backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right motor forward\nSet speed to maximum forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></statement></block><block type=\"function_definition\" x=\"954\" y=\"20\"><mutation name=\"moveForward\" functionid=\"_]uP|}0PrSB*jtI;c:DB\"><arg name=\"speed\" id=\"cqbcr6fv70uokdc2bwf\" type=\"number\"></arg></mutation><field name=\"function_name\">moveForward</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to move the Rover forward</comment><value name=\"cqbcr6fv70uokdc2bwf\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">speed</field></block></value><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left motor forward (e.g. positive speed)\nSet speed to maximum forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right motor backward (e.g. negative speed)\nSet speed to maximum backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value></block></next></block></statement></block><block type=\"function_definition\" x=\"20\" y=\"271\"><mutation name=\"turnLeft\" functionid=\"IJkw_;{=3^xg};27sZ?T\"><arg name=\"speed\" id=\"yc8dapmvm4odud8fjqkvg\" type=\"number\"></arg></mutation><field name=\"function_name\">turnLeft</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to turn the Rover left (both motors same direction)</comment><value name=\"yc8dapmvm4odud8fjqkvg\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">speed</field></block></value><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Both motors backward to turn left\nLeft motor backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right motor backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value></block></next></block></statement></block><block type=\"function_definition\" x=\"471\" y=\"271\"><mutation name=\"turnRight\" functionid=\"=ySI$X.dGYQ%k4j`]Fzx\"><arg name=\"speed\" id=\"a464j7ouwc99k3eik17\" type=\"number\"></arg></mutation><field name=\"function_name\">turnRight</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to turn the Rover right (both motors same direction)</comment><value name=\"a464j7ouwc99k3eik17\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">speed</field></block></value><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Both motors forward to turn right\nLeft motor forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right motor forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></statement></block><block type=\"function_definition\" x=\"933\" y=\"271\"><mutation name=\"stopRover\" functionid=\"E:Ik7hXRw[1dOAuhA~Bo\"></mutation><field name=\"function_name\">stopRover</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to stop the Rover</comment><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Stop left motor</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"Ac!D0T+--bLF5Yjt8-c_\">leftMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">90</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Stop right motor</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"oJW053a29MVb@uGAE@Sq\">rightMotor</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">90</field></shadow></value></block></next></block></statement></block></xml>","main.ts":"","README.md":"","pxt.json":"{\n    \"name\": \"test\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n"}}],"shares":[],"lastSaveTime":1729637136663}